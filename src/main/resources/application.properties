spring.application.name=util

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Ensure type information is not added to headers by default for producer if consumer handles it via default type
spring.kafka.producer.properties.spring.json.add.type.headers=false

# Kafka Consumer Configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=user-event-audit-consumer-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
# Crucial for deserializing to the correct DTO type without explicit type headers from producer
spring.kafka.consumer.properties.spring.json.value.default.type=com.health.util.event.UserEvent
# Trust packages for deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=com.health.util.event.*
# If producer is not sending type headers, consumer should not try to use them
spring.kafka.consumer.properties.spring.json.use.type.headers=false

# PostgreSQL Configuration for Audit Database
spring.datasource.url=jdbc:postgresql://localhost:5432/poc
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA/Hibernate Configuration
# 'update' will create/update schema based on entities. Use 'validate' in prod if schema is managed externally.
spring.jpa.hibernate.ddl-auto=update

# Logging Configuration for the Library
logging.level.com.windsurf.lib=INFO
logging.level.org.springframework.kafka=INFO